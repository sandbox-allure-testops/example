name: Java

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:
    inputs:
      ALLURE_JOB_RUN_ID:
        description: ALLURE_JOB_RUN_ID - service parameter (leave blank)
        required: false
      ALLURE_USERNAME:
        description: ALLURE_USERNAME - service parameter (leave blank)
        required: false

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Get the latest allurectl
        run: |
          latest_version=$(curl -s https://api.github.com/repos/allure-framework/allurectl/releases/latest | jq -r .tag_name)
          echo "ALLURECTL_VERSION=$latest_version" >> $GITHUB_ENV

      - name: Install allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: https://sandbox.testops.cloud/
          allure-project-id: 35
          allure-token: ${{ secrets.ALLURE_TOKEN }}
          allurectl-version: ${{ env.ALLURECTL_VERSION }}

      - name: Set dynamic OS and VERSION
        run: |
          current_date=$(date +'%-y.%-m.%-d')
          echo "DATE=$current_date" >> $GITHUB_ENV
        
          # Check if the run is odd or even
          if ((GITHUB_RUN_NUMBER % 2 == 1)); then
            echo "OS=macOS" >> $GITHUB_ENV
          else
            echo "OS=Windows" >> $GITHUB_ENV
          fi
          
          # Check if it's the last or second-to-last day of the month
          last_day_of_month=$(date -d "$(date +%Y-%m-01) + 1 month - 1 day" +%d)
          second_to_last_day=$(($last_day_of_month - 1))

          if [ $(date +%d) -eq $second_to_last_day ]; then
            echo "VERSION=${current_date}-rc" >> $GITHUB_ENV
          elif [ $(date +%d) -eq $last_day_of_month ]; then
            previous_day=$(date -d "$(date +%Y-%m-%d) -1 day" +'%-y.%-m.%-d')
            echo "VERSION=${previous_day}-release" >> $GITHUB_ENV
          else
            echo "VERSION=${current_date}" >> $GITHUB_ENV
          fi

      - name: Run tests
        run: |
          chmod +x ./gradlew 
          allurectl watch -- ./gradlew clean test
        env:
          ALLURE_RESULTS: "build/allure-results"
          ALLURE_TESTPLAN_PATH: "./testplan.json"
          BRANCH: ${{ github.ref_name }}
          BROWSER: 'Chrome'
          ENDPOINT: ${{ steps.install-allurectl.outputs.allure-endpoint }}
          OS: ${{ env.OS }}
          VERSION: ${{ env.VERSION }}
